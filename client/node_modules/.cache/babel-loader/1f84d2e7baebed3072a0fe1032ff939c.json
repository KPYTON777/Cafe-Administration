{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\projects\\\\cafe_po\\\\client\\\\src\\\\C2component2.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class C2component2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://127.0.0.1:5000/clients\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.clients\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Loading... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.Danzel\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/programming/projects/cafe_po/client/src/C2component2.js"],"names":["React","Component","C2component2","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","clients","render","message","map","item","Danzel","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAChDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGKG,MAAD,IAAY;AACR,WAAKC,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,KAAK,EAAEM,MAAM,CAACE;AAFJ,OAAd;AAIH,KARL,EASKV,KAAD,IAAW;AACP,WAAKS,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAKH,KAfL;AAiBH;;AAEDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAACX,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAA4B,KAAKH,KAAvC;;AACA,QAAIC,KAAJ,EAAW;AACP,0BAAO;AAAA,+BAAYA,KAAK,CAACY,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO,IAAI,CAACX,QAAL,EAAe;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,MAEA;AACH,0BACI;AAAA,mBACKC,KAAK,CAACW,GAAN,CAAUC,IAAI,iBACX;AAAA,oBACKA,IAAI,CAACC;AADV,WAASD,IAAI,CAACE,IAAd;AAAA;AAAA;AAAA;AAAA,gBADH,CADL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AASH;AACJ;;AA/C+C","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class C2component2 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://127.0.0.1:5000/clients\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    items: result.clients\r\n                });\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <p> Error: {error.message}</p>;\r\n        } else if (!isLoaded) {\r\n            return <p> Loading... </p>\r\n        } else {\r\n            return ( \r\n                <ul>\r\n                    {items.map(item => (\r\n                        <li key={item.name}>\r\n                            {item.Danzel}\r\n                        </li>\r\n                    ))};\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}